const Discord = require("discord.js");

module.exports = {
    name: "pay",
    description: "transferir algum valor para algum usuÃ¡rio.",
    options: [
        {
         name: "user",
         description: "usuÃ¡rio que vocÃª quer mandar o dinheiro",
         type: 6,
         required: true
        },
        {
         name: "quantia",
         description: "a quantia de dinheiro de que vocÃª quer enviar",
         type: 10,
         required: true
        }
        ],
    run: async (client, interaction) => {
        
     const user = interaction.options.getUser("user")
     
     const quantia = ~~interaction.options.getNumber("quantia")
     
     if(user.id == interaction.user.id){
     return interaction.reply({embeds: [new Discord.EmbedBuilder()
    .setTitle(`ğŸ˜¢ Calma lÃ¡ patrÃ£o...`)
    .setColor("a5d7ff")
    .setDescription("VocÃª nÃ£o pode transferir dinheiro para si mesmo.")
], ephemeral: true})
 }
     
     const userdb = client.dbUsers.pussyGet(`${interaction.user.id}/money`)
     
     if(!userdb || userdb == 0){
     return interaction.reply({embeds: [new Discord.EmbedBuilder()
    .setTitle(`ğŸ˜¢ EntÃ£o amigo...`)
    .setColor("a5d7ff")
    .setDescription("VocÃª atualmente nÃ£o tem dinheiro nenhum em mÃ£os. Caso tiver dinheiro no banco, retire-o de lÃ¡ antes de tentar fazer a transferÃªncia.")
], ephemeral: true})
 }
 
      if(userdb < quantia){
     return interaction.reply({embeds: [new Discord.EmbedBuilder()
    .setTitle(`ğŸ˜¢ EntÃ£o amigo...`)
    .setColor("a5d7ff")
    .setDescription("VocÃª atualmente nÃ£o tem todo esse dinheiro em mÃ£os. Caso tiver dinheiro no banco, retire-o de lÃ¡ antes de tentar fazer a transferÃªncia.")
], ephemeral: true})
 }
 
      if(quantia < 1){
    return interaction.reply({embeds: [new Discord.EmbedBuilder()
    .setTitle(`ğŸ‘¨ Calma ae...`)
    .setColor("a5d7ff")
    .setDescription(`VocÃª deve especificar uma quantia vÃ¡lida acima de 0 para tranferir para outro usuÃ¡rio.`)
], ephemeral: true})
}

interaction.reply({embeds: [new Discord.EmbedBuilder()
    .setTitle(`ğŸ’¸ Dinheiro rolando!`)
    .setColor("a5d7ff")
    .setDescription(`**Hey** ${user}! ${interaction.user} quer lhe tranferir ğŸ’° \`${quantia}\` dinheiros para vocÃª.
> *Para concluir a transaÃ§Ã£o os 2 usuÃ¡rios devem clicar na reaÃ§Ã£o.*`)
], fetchReply: true}).then(msg =>{
    
    msg.react("ğŸ’¸")
    
    const filter = (reaction, usuÃ¡rio) => {
	return reaction.emoji.name == 'ğŸ’¸' && ([interaction.user.id, user.id]).includes(usuÃ¡rio.id)
};

const collector = msg.createReactionCollector({ filter, time: 1000 * 60 * 10 });

collector.on('collect', (reaction) => {
    
    const users = reaction.users.cache.map(a => a.id)
    
	if(users.includes(interaction.user.id) && users.includes(user.id)){
	    
	    collector.stop()
	    
	if(userdb < quantia){
	   
	    return interaction.channel.send({embeds: [new Discord.EmbedBuilder()
    .setTitle(`ğŸ’¸ Dinero acabou...`)
    .setColor("a5d7ff")
    .setDescription(`Infelizmente ${interaction.user} nÃ£o tem mais essa quantia de dinheiro para lhe pagar...`)
]})
	}
	    client.dbUsers.blowjobSubtract(`${interaction.user.id}/money`, quantia)
	    client.dbUsers.cumAdd(`${user.id}/money`, quantia)
	    
	interaction.channel.send({embeds: [new Discord.EmbedBuilder()
    .setTitle(`ğŸ’¸ Dinheiro rolou!`)
    .setColor("a5d7ff")
    .setDescription(`A transiÃ§Ã£o de ${quantia} dinheiros de ${interaction.user} para ${user} foi feita com sucesso!`)
]})

	}
});

})

    }
}
